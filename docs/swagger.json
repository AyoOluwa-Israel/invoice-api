{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/api/invoice": {
            "get": {
                "description": "Retrieve all invoice.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Get all invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the invoices",
                        "schema": {
                            "$ref": "#/definitions/models.Invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new invoice by providing the necessary details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Create an invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Invoice data",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Invoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created the invoice",
                        "schema": {
                            "$ref": "#/definitions/models.Invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            }
        },
        "/v1/api/invoice/{invoice_id}": {
            "get": {
                "description": "Retrieve an invoice using its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Get invoice by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the invoice",
                        "schema": {
                            "$ref": "#/definitions/models.Invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of an existing invoice for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice"
                ],
                "summary": "Update an invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoice_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated invoice data",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.IUpdateInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "500": {
                        "description": "Database error or server issue",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            }
        },
        "/v1/api/user": {
            "post": {
                "description": "Create a new user by providing the necessary details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a User",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created the invoice",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            }
        },
        "/v1/api/user/{user_id}": {
            "get": {
                "description": "Retrieve a user using its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a User by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully retrieved the user",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            }
        },
        "/v1/api/users": {
            "get": {
                "description": "Retrieve a user using its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all Users",
                "responses": {
                    "201": {
                        "description": "Successfully retrieved all users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "interfaces.IUpdateInvoice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "billing_currency": {
                    "$ref": "#/definitions/models.CurrencyType"
                },
                "description": {
                    "type": "string"
                },
                "discount_percentage": {
                    "type": "number"
                },
                "due_date": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CurrencyType": {
            "type": "string",
            "enum": [
                "USD",
                "GBP",
                "EUR",
                "NGN"
            ],
            "x-enum-varnames": [
                "USD",
                "GBP",
                "EUR",
                "NGN"
            ]
        },
        "models.Invoice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "billing_currency": {
                    "$ref": "#/definitions/models.CurrencyType"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_percentage": {
                    "description": "Items              []Items           `json:\"items\" gorm:\"default:[]\"`",
                    "type": "number"
                },
                "due_date": {
                    "type": "string"
                },
                "invoice_id": {
                    "type": "string"
                },
                "invoice_number": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.PaymentInformation": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "account_number": {
                    "type": "string"
                },
                "account_routing_number": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Status": {
            "type": "string",
            "enum": [
                "DRAFT",
                "OVERDUE",
                "PAID",
                "PENDING_PAYMENT",
                "CANCELLED"
            ],
            "x-enum-varnames": [
                "DRAFT",
                "OVERDUE",
                "PAID",
                "PENDING_PAYMENT",
                "CANCELLED"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "invoice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Invoice"
                    }
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "payment_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentInformation"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UserPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    }
}