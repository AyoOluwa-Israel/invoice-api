definitions:
  controllers.response:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
  interfaces.IUpdateInvoice:
    properties:
      amount:
        type: number
      billing_currency:
        $ref: '#/definitions/models.CurrencyType'
      description:
        type: string
      discount_percentage:
        type: number
      due_date:
        type: string
      note:
        type: string
      updated_at:
        type: string
    type: object
  models.CurrencyType:
    enum:
    - USD
    - GBP
    - EUR
    - NGN
    type: string
    x-enum-varnames:
    - USD
    - GBP
    - EUR
    - NGN
  models.Invoice:
    properties:
      amount:
        type: number
      billing_currency:
        $ref: '#/definitions/models.CurrencyType'
      created_at:
        type: string
      description:
        type: string
      discount_percentage:
        description: Items              []Items           `json:"items" gorm:"default:[]"`
        type: number
      due_date:
        type: string
      invoice_id:
        type: string
      invoice_number:
        type: string
      note:
        type: string
      status:
        $ref: '#/definitions/models.Status'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.PaymentInformation:
    properties:
      account_name:
        type: string
      account_number:
        type: string
      account_routing_number:
        type: string
      bank_name:
        type: string
      id:
        type: string
      user_id:
        type: string
    type: object
  models.Status:
    enum:
    - DRAFT
    - OVERDUE
    - PAID
    - PENDING_PAYMENT
    - CANCELLED
    type: string
    x-enum-varnames:
    - DRAFT
    - OVERDUE
    - PAID
    - PENDING_PAYMENT
    - CANCELLED
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      image_url:
        type: string
      invoice:
        items:
          $ref: '#/definitions/models.Invoice'
        type: array
      is_verified:
        type: boolean
      last_name:
        type: string
      payment_info:
        items:
          $ref: '#/definitions/models.PaymentInformation'
        type: array
      phone:
        type: string
      updated_at:
        type: string
    type: object
  models.UserPayload:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/api/invoice:
    get:
      consumes:
      - application/json
      description: Retrieve all invoice.
      parameters:
      - description: User ID
        in: header
        name: X-User-Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the invoices
          schema:
            $ref: '#/definitions/models.Invoice'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/controllers.response'
        "404":
          description: Invoice not found
          schema:
            $ref: '#/definitions/controllers.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.response'
      summary: Get all invoice
      tags:
      - Invoice
    post:
      consumes:
      - application/json
      description: Create a new invoice by providing the necessary details.
      parameters:
      - description: User ID
        in: header
        name: X-User-Id
        required: true
        type: string
      - description: Invoice data
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/models.Invoice'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created the invoice
          schema:
            $ref: '#/definitions/models.Invoice'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/controllers.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.response'
      summary: Create an invoice
      tags:
      - Invoice
  /v1/api/invoice/{invoice_id}:
    get:
      consumes:
      - application/json
      description: Retrieve an invoice using its unique ID.
      parameters:
      - description: User ID
        in: header
        name: X-User-Id
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the invoice
          schema:
            $ref: '#/definitions/models.Invoice'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/controllers.response'
        "404":
          description: Invoice not found
          schema:
            $ref: '#/definitions/controllers.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.response'
      summary: Get invoice by ID
      tags:
      - Invoice
    put:
      consumes:
      - application/json
      description: Updates the details of an existing invoice for a specific user.
      parameters:
      - description: Invoice ID
        in: path
        name: invoice_id
        required: true
        type: string
      - description: User ID
        in: header
        name: X-User-Id
        required: true
        type: string
      - description: Updated invoice data
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/interfaces.IUpdateInvoice'
      produces:
      - application/json
      responses:
        "200":
          description: Invoice updated successfully
          schema:
            $ref: '#/definitions/controllers.response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/controllers.response'
        "404":
          description: Invoice not found
          schema:
            $ref: '#/definitions/controllers.response'
        "500":
          description: Database error or server issue
          schema:
            $ref: '#/definitions/controllers.response'
      summary: Update an invoice
      tags:
      - Invoice
  /v1/api/user:
    post:
      consumes:
      - application/json
      description: Create a new user by providing the necessary details.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created the invoice
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/controllers.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.response'
      summary: Create a User
      tags:
      - User
  /v1/api/user/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user using its unique ID.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successfully retrieved the user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/controllers.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.response'
      summary: Get a User by ID
      tags:
      - User
  /v1/api/users:
    get:
      consumes:
      - application/json
      description: Retrieve a user using its unique ID.
      produces:
      - application/json
      responses:
        "201":
          description: Successfully retrieved all users
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/controllers.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.response'
      summary: Get all Users
      tags:
      - User
swagger: "2.0"
